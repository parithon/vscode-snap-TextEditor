# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
    - master
    - vnext

pr: none

jobs:
  - job: 'Build'
    
    strategy:
      maxParallel: 5
      matrix:
        linux_node-8.x:
          imageName: 'ubuntu-16.04'
          node_version: 8.x
        linux_node-10.x:
          imageName: 'ubuntu-16.04'
          node_version: 10.x
        linux_node-12.x:
          imageName: 'ubuntu-16.04'
          node_version: 12.x
        windows_node-12.x:
          imageName: 'vs2017-win2016'
          node_version: 12.x
        macOS_node-12.x:
          imageName: 'macos-10.13'
          node_version: 12.x
    
    pool:      
      vmImage: $(imageName)
      
    steps:
      - task: NodeTool@0
        displayName: 'Use node $(node_version)'
        inputs:
          versionSpec: $(node_version)
      
      - task: Npm@1
        displayName: 'Install dependencies'
        inputs:
          command: install
          verbose: false

      - task: Npm@1
        displayName: 'Compile TypeScript'
        inputs:
          command: custom
          customCommand: 'run compile'
          verbose: false

      - task: Bash@3
        displayName: 'Start xvfb if running Linux'
        condition: eq(variables['Agent.OS'], 'Linux')
        inputs:
          targetType: 'inline'
          script: |
            set -e
            /usr/bin/Xvfb :10 -ac >> /tmp/Xvfb.out 2>&1 &
            disown -ar

      - task: Npm@1
        displayName: 'Run Tests'
        env:
          DISPLAY: :10
        inputs:
          command: custom
          customCommand: 'run test'
          verbose: false

  - job: 'Publish'
    displayName: 'Publish VSIX Package'
    dependsOn: 'Build'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

    pool:
      vmImage: 'ubuntu-16.04'
    
    steps:
      - task: NodeTool@0
        displayName: 'Use node 12.x'
        inputs:
          versionSpec: 12.x
      
      - task: Npm@1
        displayName: 'Install dependencies'
        inputs:
          command: install
          verbose: false
      
      - task: Npm@1
        displayName: 'Create VSIX package'
        inputs:
          command: custom
          customCommand: 'run package'
          verbose: false

      - task: CopyFiles@2
        displayName: 'Copy release notes to staging directory'
        inputs:
          SourceFolder: 'releasenotes'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactsStagingDirectory)/releasenotes'
          CleanTargetFolder: true

      - task: CopyFiles@2
        displayName: 'Copy release.vsix to staging directory'
        inputs:
          SourceFolder: '/'
          Contents: 'release.vsix'
          TargetFolder: '$(Build.ArtifactsStagingDirectory)'
          OverWrite: true

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'release'
          publishLocation: 'Container'
